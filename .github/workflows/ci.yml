name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  main-linux:
    runs-on: ubuntu-latest
    env:
      NX_E2E_CI_CACHE_KEY: e2e-github-linux
      NX_DAEMON: 'false'
      NX_PERF_LOGGING: 'true'
      NX_VERBOSE_LOGGING: 'true'
      NX_NATIVE_LOGGING: 'false'
      NX_E2E_RUN_E2E: 'true'
      NX_CI_EXECUTION_ENV: 'linux'
      NX_CLOUD_DTE_V2: 'true'
      NX_CLOUD_DTE_SUMMARY: 'true'
      NX_CLOUD_NO_TIMEOUTS: 'true'
      NX_CLOUD_SKIP_WORKSPACE_DATA_CACHE: 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch Master
        run: git fetch origin master:master
        if: ${{ github.event_name == 'pull_request' }}

      - name: Set SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Download Cargo dependencies
        run: cargo metadata --format-version=1

      - name: Download Cargo dependencies
        run: cargo metadata --format-version=1

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.8.0
          run_install: false

      - name: Install project dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm playwright install --with-deps

      - name: Show projects (cold)
        run: npx nx show projects

      - name: Show affected projects (warm)
        run: npx nx show projects

      - name: Start CI Run
        run: npx nx-cloud@next start-ci-run --distribute-on="./.nx/workflows/dynamic-changesets.yaml" --stop-agents-after="e2e"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates lsof libvips-dev libglib2.0-dev libgirepository1.0-dev

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Check Documentation
        run: pnpm nx documentation
        timeout-minutes: 20

      - name: Run Checks/Lint/Test/Build
        run: |
          pids=()
          
          pnpm nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD &
          pids+=($!)
          
          pnpm nx-cloud record -- nx sync:check
          pids+=($!)
          
          pnpm nx-cloud record -- nx-cloud conformance:check
          pids+=($!)
          
          pnpm nx run-many -t check-imports check-commit check-lock-files check-codeowners --parallel=1 --no-dte &
          pids+=($!)
          
          pnpm nx affected --targets=lint,test,build,e2e,e2e-ci --base=$NX_BASE --head=$NX_HEAD --parallel=3 &
          pids+=($!)
          
          for pid in "${pids[@]}"; do
            wait "$pid"
          done
        timeout-minutes: 100
